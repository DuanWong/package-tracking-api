// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PackageTrackingAPI.DAL;

#nullable disable

namespace PackageTrackingAPI.DAL.Migrations
{
    [DbContext(typeof(PackageTrackingContext))]
    partial class PackageTrackingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Package", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderID")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageID");

                    b.HasIndex("SenderID");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageID = 101,
                            CreatedAt = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7620),
                            CurrentStatus = "Created",
                            ReceiverAddress = "123 Main St, City, Country",
                            ReceiverName = "John Doe",
                            SenderID = 1,
                            TrackingNumber = "TRACK1234"
                        },
                        new
                        {
                            PackageID = 102,
                            CreatedAt = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7626),
                            CurrentStatus = "Shipped",
                            ReceiverAddress = "456 Oak St, City, Country",
                            ReceiverName = "Jane Smith",
                            SenderID = 2,
                            TrackingNumber = "TRACK5678"
                        },
                        new
                        {
                            PackageID = 103,
                            CreatedAt = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7628),
                            CurrentStatus = "Delivered",
                            ReceiverAddress = "789 Pine St, City, Country",
                            ReceiverName = "Alice Johnson",
                            SenderID = 3,
                            TrackingNumber = "TRACK9101"
                        },
                        new
                        {
                            PackageID = 104,
                            CreatedAt = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7630),
                            CurrentStatus = "In Transit",
                            ReceiverAddress = "101 Maple St, City, Country",
                            ReceiverName = "Bob Williams",
                            SenderID = 4,
                            TrackingNumber = "TRACK1121"
                        },
                        new
                        {
                            PackageID = 105,
                            CreatedAt = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7632),
                            CurrentStatus = "Returned",
                            ReceiverAddress = "202 Birch St, City, Country",
                            ReceiverName = "Charlie Brown",
                            SenderID = 5,
                            TrackingNumber = "TRACK3141"
                        });
                });

            modelBuilder.Entity("PackageTrackingAPI.Models.Alert", b =>
                {
                    b.Property<int>("AlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertID"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AlertID");

                    b.HasIndex("UserID");

                    b.ToTable("Alerts");

                    b.HasData(
                        new
                        {
                            AlertID = 1,
                            Message = "Package delayed due to weather conditions.",
                            PackageID = 101,
                            Timestamp = new DateTime(2025, 4, 11, 5, 30, 0, 0, DateTimeKind.Local),
                            UserID = 1
                        },
                        new
                        {
                            AlertID = 2,
                            Message = "Package out for delivery.",
                            PackageID = 102,
                            Timestamp = new DateTime(2025, 4, 11, 7, 45, 0, 0, DateTimeKind.Local),
                            UserID = 2
                        },
                        new
                        {
                            AlertID = 3,
                            Message = "Package delivered successfully.",
                            PackageID = 103,
                            Timestamp = new DateTime(2025, 4, 10, 11, 20, 0, 0, DateTimeKind.Local),
                            UserID = 3
                        },
                        new
                        {
                            AlertID = 4,
                            Message = "Package returned to sender.",
                            PackageID = 104,
                            Timestamp = new DateTime(2025, 4, 9, 9, 5, 0, 0, DateTimeKind.Local),
                            UserID = 4
                        },
                        new
                        {
                            AlertID = 5,
                            Message = "Package pending at pickup location.",
                            PackageID = 105,
                            Timestamp = new DateTime(2025, 4, 8, 13, 30, 0, 0, DateTimeKind.Local),
                            UserID = 5
                        });
                });

            modelBuilder.Entity("PackageTrackingAPI.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            PasswordHash = "hashed_password_1",
                            Role = "Admin"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "bob.smith@example.com",
                            Name = "Bob Smith",
                            PasswordHash = "hashed_password_2",
                            Role = "User"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "charlie.brown@example.com",
                            Name = "Charlie Brown",
                            PasswordHash = "hashed_password_3",
                            Role = "User"
                        },
                        new
                        {
                            UserID = 4,
                            Email = "david.wilson@example.com",
                            Name = "David Wilson",
                            PasswordHash = "hashed_password_4",
                            Role = "Manager"
                        },
                        new
                        {
                            UserID = 5,
                            Email = "emma.davis@example.com",
                            Name = "Emma Davis",
                            PasswordHash = "hashed_password_5",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("TrackingEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EventID");

                    b.HasIndex("PackageID");

                    b.ToTable("TrackingEvents");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            Location = "Warehouse A",
                            PackageID = 101,
                            Status = "Package created",
                            Timestamp = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7662)
                        },
                        new
                        {
                            EventID = 2,
                            Location = "Warehouse B",
                            PackageID = 102,
                            Status = "Package shipped",
                            Timestamp = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7665)
                        },
                        new
                        {
                            EventID = 3,
                            Location = "Delivery Point",
                            PackageID = 103,
                            Status = "Package delivered",
                            Timestamp = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7667)
                        },
                        new
                        {
                            EventID = 4,
                            Location = "Distribution Center",
                            PackageID = 104,
                            Status = "Package in transit",
                            Timestamp = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7669)
                        },
                        new
                        {
                            EventID = 5,
                            Location = "Returned to sender",
                            PackageID = 105,
                            Status = "Package returned",
                            Timestamp = new DateTime(2025, 4, 12, 2, 59, 41, 0, DateTimeKind.Utc).AddTicks(7670)
                        });
                });

            modelBuilder.Entity("Package", b =>
                {
                    b.HasOne("PackageTrackingAPI.Models.User", "Sender")
                        .WithMany("Packages")
                        .HasForeignKey("SenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PackageTrackingAPI.Models.Alert", b =>
                {
                    b.HasOne("PackageTrackingAPI.Models.User", "User")
                        .WithMany("Alerts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrackingEvent", b =>
                {
                    b.HasOne("Package", "Package")
                        .WithMany("TrackingEvents")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Package", b =>
                {
                    b.Navigation("TrackingEvents");
                });

            modelBuilder.Entity("PackageTrackingAPI.Models.User", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
